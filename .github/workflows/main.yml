name: App

on:
  push:
    branches:
      - main

jobs:
   build:
        name: Build da aplicação
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout do repositório
            uses: actions/checkout@v3
    
          - name: Setup JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
    
          - name: Build com Maven (sem testes)
            run: ./mvnw clean package -DskipTests
   test:
        name: Testes da aplicação
        runs-on: ubuntu-latest
        needs: build
        services:
            mysql:
              image: mysql # ou a versão que você deseja usar
              options: >-
                --health-cmd="mysqladmin ping --silent"
                --health-interval=5s
                --health-timeout=10s
                --health-retries=5
              env:
                MYSQL_ROOT_PASSWORD: rootpassword
                MYSQL_DATABASE: testdb
                MYSQL_USER: testuser
                MYSQL_PASSWORD: testpassword
              ports:
                - 3306:3306
    
        steps:
          - name: Checkout do repositório
            uses: actions/checkout@v3
    
          - name: Setup JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
    
          - name: Rodar testes
            run: ./mvnw test -Dspring.profiles.active=test

          - name: Check MySQL is up
            run: |
              until mysql -h 127.0.0.1 -u testuser -ptestpassword -e 'SELECT 1'; do
                echo "Waiting for MySQL to be ready..."
                sleep 2
              done
   docker:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
        - name: Obtendo o código
          uses: actions/checkout@v4.2.2
        - name: Autenticação no Docker Hub
          uses: docker/login-action@v3.4.0
          with:
            username: ${{secrets.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_PASSWORD}}
        - name: Build e push da imagem Docker
          uses: docker/build-push-action@v6.15.0
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: |
             leandromelo99/auth-api:v${{ github.run_number }}
             leandromelo99/auth-api:latest
